var documenterSearchIndex = {"docs":
[{"location":"mhdfilter/#MHD-Filtering-Wrapper-API","page":"MHD Filtering Wrapper API","title":"MHD Filtering Wrapper API","text":"","category":"section"},{"location":"mhdfilter/","page":"MHD Filtering Wrapper API","title":"MHD Filtering Wrapper API","text":"filter_mhd_gpu","category":"page"},{"location":"mhdfilter/#ImageDataIO.filter_mhd_gpu","page":"MHD Filtering Wrapper API","title":"ImageDataIO.filter_mhd_gpu","text":"Runs total variation filtering on a set of images.\n\nArguments\n\nparam_path::Dict: Dictionary of locations of data\npath_dir_mhd::String: Location of MHD files to filter\nt_range: Time points to filter\nlist_ch: Channels to filter\nf_basename::Function: Function that returns MHD filename given time point and channel\nmhd_filt_dir_key::String (optional): Key in param_path that maps to the location to store the output MHD files. Default path_dir_mhd_filt\nmip_filt_dir_key::String (optional): Key in param_path that maps to the location to store the output MIP files. Default path_dir_MIP_filt\nvmax: Contrast setting for png files\n\n\n\n\n\n","category":"function"},{"location":"shearcorrect/#Shear-Correction-Wrapper-API","page":"Shear Correction Wrapper API","title":"Shear Correction Wrapper API","text":"","category":"section"},{"location":"shearcorrect/","page":"Shear Correction Wrapper API","title":"Shear Correction Wrapper API","text":"shear_correction_mhd!","category":"page"},{"location":"shearcorrect/#ImageDataIO.shear_correction_mhd!","page":"Shear Correction Wrapper API","title":"ImageDataIO.shear_correction_mhd!","text":"Applies shear correction to a dataset.\n\nArguments\n\nparam_path::Dict: Dictionary containing locations of input and output directories with MHD files\nparam::Dict: Dictionary containing image dimension parameters x_range, y_range, z_range, and t_range\nch_list: List of channels to apply shear correction to; all channels will have the same shear correction applied.\nshear_params_dict::Dict: Dictionary of shear correction parameters. If nonempty, those parameters will be used.  If empty, it will be filled with the computed paramers.\nvmax::Int: Contrast parameter for png files\nmhd_key::String (optional): Key in param_path containing input MHD directory\nmhd_out_key::String (optional): Key in param_path containing output MHD directory\nMIP_out_key::String (optional): Key in param_path containing output MIP directory\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#Dictionary-IO-API","page":"Dictionary IO API","title":"Dictionary IO API","text":"","category":"section"},{"location":"dictionary/","page":"Dictionary IO API","title":"Dictionary IO API","text":"write_dict\nread_2d_dict\nparse_1d_tuple\nparse_1d_dict\nsplit_arrays\nmulti_index_array\nextract_key\nadd_get_basename!","category":"page"},{"location":"dictionary/#ImageDataIO.write_dict","page":"Dictionary IO API","title":"ImageDataIO.write_dict","text":"Writes a dictionary to a file.\n\nArguments\n\ndict: Dictionary to write\nout::AbstractString: filename to write to\nkv_delimiter::AbstractString (optional, default \" \") delimiter between keys and values\nkk_delimiter::AbstractString (optional, default \"\n\n\") delimiter between subsequent keys\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.read_2d_dict","page":"Dictionary IO API","title":"ImageDataIO.read_2d_dict","text":"Reads 2D dictionary (dictionary of dictionaries) from a file.\n\nArguments\n\ninput::AbstractString: input file\nouter_key_dtype::Type: data type of outer keys\ninner_key_dtype::Type: data type of inner keys\nval_dtype::Type: data type of values of inner dict\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.parse_1d_tuple","page":"Dictionary IO API","title":"ImageDataIO.parse_1d_tuple","text":"Parses one-dimensional string tuple tuple_str::AbstractString into a tuple of the specified dtype::Type\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.parse_1d_dict","page":"Dictionary IO API","title":"ImageDataIO.parse_1d_dict","text":"Parses a 1D dictionary; the keys and values must be at most 1D arrays. Arguments:\n\ndict_str::AbstractString: string representation of dictionary to parse\nkey_dtype::Type: element data type of dictionary keys\nval_dtype::Type: element data type of dictionary values\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.split_arrays","page":"Dictionary IO API","title":"ImageDataIO.split_arrays","text":"Parses a string multi-dimensional array or list of arrays arrays::AbstractString into its component arrays.\n\nArguments\n\narrays::AbstractString: string of arrays to parse\n\nOptional keyword arguments\n\nfwd_delimiters: list of characters to delineate when an array starts\nback_delimiters: list of characters to delineate when an array ends\nval_delimiters: list of characters to delineate separating values of the array\nignore_chars: list of characters to ignore and not put in the final array\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.multi_index_array","page":"Dictionary IO API","title":"ImageDataIO.multi_index_array","text":"Indexes a nested array at index as though the array was a mulit-dimensional array.\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.extract_key","page":"Dictionary IO API","title":"ImageDataIO.extract_key","text":"Adds or retrieves a key from a given layer of a nested dictionary.\n\nArguments\n\ndict: Dictionary to operate on\nkey: Key to interact with\nn::Integer: The layer of the dictionary to interact with\nextract::Bool: If true, extracts the key from the dictionary; if false, adds the key to the dictionary instead.\n\n\n\n\n\n","category":"function"},{"location":"dictionary/#ImageDataIO.add_get_basename!","page":"Dictionary IO API","title":"ImageDataIO.add_get_basename!","text":"Adds get_basename key to the dictionary param_path.\n\n\n\n\n\n","category":"function"},{"location":"file/#File-IO-API","page":"File IO API","title":"File IO API","text":"","category":"section"},{"location":"file/#Basic-File-Operations","page":"File IO API","title":"Basic File Operations","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"back_one_dir\nget_filename","category":"page"},{"location":"file/#ImageDataIO.back_one_dir","page":"File IO API","title":"ImageDataIO.back_one_dir","text":"Given a directory as input, outputs the parent directory.\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.get_filename","page":"File IO API","title":"ImageDataIO.get_filename","text":"Given path to a file, outputs the filename.\n\n\n\n\n\n","category":"function"},{"location":"file/#Head-Position-File-IO","page":"File IO API","title":"Head Position File IO","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"read_head_pos","category":"page"},{"location":"file/#ImageDataIO.read_head_pos","page":"File IO API","title":"ImageDataIO.read_head_pos","text":"Reads the worm head position from the file head_path::String. Returns a dictionary mapping frame => head position of the worm at that frame.\n\n\n\n\n\n","category":"function"},{"location":"file/#Registration-File-IO","page":"File IO API","title":"Registration File IO","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"load_registration_problems\nmodify_parameter_file\nread_parameter_file","category":"page"},{"location":"file/#ImageDataIO.load_registration_problems","page":"File IO API","title":"ImageDataIO.load_registration_problems","text":"Loads a set of registration problems into an array.\n\nArguments:\n\nedge_file_paths::Array{String, 1}: paths containing registration problems\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.modify_parameter_file","page":"File IO API","title":"ImageDataIO.modify_parameter_file","text":"function modify_parameter_file(param_in::String, param_out::String, substitutions::Dict; is_universal=false) Modifies an elastix transform parameter file.\n\nArguments\n\nparam_in::String: Path to parameter file to modify\nparam_out::String: Path to modified parameter file output\nsubstitutions::Dict: Dictionary of substitutions. For each key in substitutions, if it is a key in the parameter file, replace its value with the value in substitutions.\nis_universal::Bool (optional):  If set to true, instead find/replace all instances of keys in substitutions regardless of if it is a key in the parameter file\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.read_parameter_file","page":"File IO API","title":"ImageDataIO.read_parameter_file","text":"Reads a value from a paremeter file.\n\nArguments\n\nparameter_fiile_path::String: Path to parameter file\nkey::String: Value to read\ndtype::Type: Type of the value or elements of value (if it's an array)\n\n\n\n\n\n","category":"function"},{"location":"file/#MHD-File-IO","page":"File IO API","title":"MHD File IO","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"read_mhd\nmodify_mhd","category":"page"},{"location":"file/#ImageDataIO.read_mhd","page":"File IO API","title":"ImageDataIO.read_mhd","text":"function read_mhd(rootpath, img_prefix, mhd_path, frame, channel):\n\nReads MHD file from rootpath/mhd_path/img_prefix_tchannel.mhd and outputs resulting image.\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.modify_mhd","page":"File IO API","title":"ImageDataIO.modify_mhd","text":"Modifies an MHD file.\n\nArguments\n\nmhd_in::String: Path to file to modify\nmhd_out::String: Path to output file \nsubstitutions::Dict: Dictionary of substitutions. For each key in substitutions, if it is a key in the mhd file, replace its value with the value in substitutions.\n\n\n\n\n\n","category":"function"},{"location":"file/#Activity-IO-API","page":"File IO API","title":"Activity IO API","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"read_activity\nwrite_activity","category":"page"},{"location":"file/#ImageDataIO.read_activity","page":"File IO API","title":"ImageDataIO.read_activity","text":"Reads ROI activities from input.\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.write_activity","page":"File IO API","title":"ImageDataIO.write_activity","text":"Writes list of ROI activities activity to output file out.\n\n\n\n\n\n","category":"function"},{"location":"file/#Centroids-File-IO","page":"File IO API","title":"Centroids File IO","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"write_centroids\nread_centroids_transformix\nread_centroids_roi","category":"page"},{"location":"file/#ImageDataIO.write_centroids","page":"File IO API","title":"ImageDataIO.write_centroids","text":"Writes centroids to transformix-compatible file out\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.read_centroids_transformix","page":"File IO API","title":"ImageDataIO.read_centroids_transformix","text":"Reads centroids from transformix output file input\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.read_centroids_roi","page":"File IO API","title":"ImageDataIO.read_centroids_roi","text":"Reads centroids from write_centroids output file input\n\n\n\n\n\n","category":"function"},{"location":"file/#UNet-IO","page":"File IO API","title":"UNet IO","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"load_training_set\nload_predictions","category":"page"},{"location":"file/#ImageDataIO.load_training_set","page":"File IO API","title":"ImageDataIO.load_training_set","text":"Loads training (or validation dataset) in 3D dataset h5_file::String. Returns raw, label, and weight fields.\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.load_predictions","page":"File IO API","title":"ImageDataIO.load_predictions","text":"Loads UNet predictions in 3D dataset h5_file::String. If the file has a fourth dimension, assumes predictions are stored in its second entry. Returns the portion of predictions field corresponding to foreground. Can optionally set threshold to binarize predictions.\n\n\n\n\n\n","category":"function"},{"location":"file/#Watershed-Errors-IO-(not-currently-in-use)","page":"File IO API","title":"Watershed Errors IO (not currently in use)","text":"","category":"section"},{"location":"file/","page":"File IO API","title":"File IO API","text":"write_watershed_errors\nread_watershed_errors","category":"page"},{"location":"file/#ImageDataIO.write_watershed_errors","page":"File IO API","title":"ImageDataIO.write_watershed_errors","text":"Writes watershed_errors to path.\n\n\n\n\n\n","category":"function"},{"location":"file/#ImageDataIO.read_watershed_errors","page":"File IO API","title":"ImageDataIO.read_watershed_errors","text":"Reads watershed errors from path.\n\n\n\n\n\n","category":"function"},{"location":"#ImageDataIO.jl-Documentation","page":"ImageDataIO.jl Documentation","title":"ImageDataIO.jl Documentation","text":"","category":"section"},{"location":"","page":"ImageDataIO.jl Documentation","title":"ImageDataIO.jl Documentation","text":"Pages = [\"file.md\", \"shearcorrect.md\", \"mhdfilter.md\", \"dictionary.md\"]","category":"page"}]
}
